// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[]

  @@map("users")
}

model Project {
  id           String     @id @default(cuid())
  name         String
  idea         String
  status       String     @default("CREATED")
  currentStage Int        @default(1)
  userId       String?
  ollamaModel  String?
  modelType    String?    // 'ollama' or 'groq'
  modelName    String?    // The actual model name
  user         User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks        Task[]
  artifacts    Artifact[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("projects")
}

model Task {
  id        String   @id @default(cuid())
  name      String
  status    String   @default("PENDING")
  stage     Int
  agent     String
  result    String?
  error     String?
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tasks")
}

model Artifact {
  id        String   @id @default(cuid())
  name      String
  content   String
  type      String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("artifacts")
}

model Agent {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  stage       Int
  prompt      String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("agents")
}